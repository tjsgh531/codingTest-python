collections.Counter(iterable data)
iterable data : 리스트, 딕셔너리, 
"값 = 개수" 형태로 iterable data를 주면 값이 개수만큼 

: 컨테이너에 동일한 값의 자료가 몇개인지 파악하는데 사용하는 객체
-> 결과 값은 딕셔너리 형태로 출력
-> 요소의 갯수가 많은 것 부터 출력

[collections.Counter의 내장 메소드]
1. Couneter.items() => 딕셔너리 메소드도 이용가능
.items() : 딕셔너리에서 키와 값을 각각 줄때 사용하는

예시) 
for key, value in Counter.items():
    print(key, ':', value)

2. elements()
Counter로 생성된 딕셔너리를
각 맴버들로 만들어 반환
=> itertools.chain 객체가 나오네 => list 또는 sorted함수를 사용하여 list 형으로 바꿔 줘야함

*itertools.chain이 뭘까?


*맴버 = 변수


3. most_common()
가장 빈도가 높은 순으로 표시 = 리스트 형태로 반환해줌
+ argumnet로 숫자를 주면 빈도수가 그 숫자보다 작거나 같은 것만 표시

예시)
print(Counter("이선호").most_common())
print(Counter("이선호 이선호 호").most_common(2))

